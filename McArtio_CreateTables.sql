CREATE SCHEMA IF NOT EXISTS MCARTIO;

CREATE TABLE TICKET (
    TICKET_ID BIGINT NOT NULL,
    TIMEPLACED TIMESTAMP NOT NULL,
    TOTAL_PRODUCT DECIMAL(5,2) NOT NULL,
    TOTAL_TAX DECIMAL(5,2) NOT NULL,
    TOTAL_ORDER DECIMAL(5,2) NOT NULL,
    PAYMENT_ID BIGINT NOT NULL,
    EMPLOYEE_ID INT NOT NULL,
    CUSTOMER_ID BIGINT NOT NULL DEFAULT 0000,
    CURRENCY_ID CHAR(3) NOT NULL,
    RESTAURANT_ID VARCHAR(20) NOT NULL,
    ORDER_TYPE_ID INT NOT NULL,
    PRIMARY KEY (TICKET_ID)
);

CREATE TABLE CUSTOMER (
    CUSTOMER_ID BIGINT NOT NULL ,
    FIRST_NAME VARCHAR(30) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    PHONE_NUMBER VARCHAR(20),
    EMAIL VARCHAR(50) NOT NULL,
    ADDRESS_ID INTEGER,
    PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE COUPON (
    COUPON_ID BIGINT NOT NULL,
    COUPON_CODE VARCHAR(20),
    COUPON_DESCRIPTION VARCHAR(200) NOT NULL,
    COUPON_START_DATE DATE NOT NULL,
    COUPON_EXPIRATION_DATE DATE,
    PRIMARY KEY (COUPON_ID)
);

CREATE TABLE CUSTOMERCOUPON (
    COUPON_ID BIGINT NOT NULL,
    CUSTOMER_ID BIGINT NOT NULL,
    PRIMARY KEY (CUSTOMER_ID,COUPON_ID)
);

CREATE TABLE ORDERTYPE (
    ORDER_TYPE_ID INT NOT NULL,
    ORDER_DESCRIPTION VARCHAR(20) NOT NULL,
    PRIMARY KEY (ORDER_TYPE_ID)
);

CREATE TABLE EMPLOYEE (
	EMPLOYEE_ID INT NOT NULL,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	PHONE_NUMBER VARCHAR(20) NOT NULL,
	SEX CHAR(1) NOT NULL,
	MONTHLY_SALARY DECIMAL NOT NULL,
	BIRTH_DATE DATE NOT NULL,
	START_DATE DATE NOT NULL,
    END_DATE DATE,
	EMAIL VARCHAR(50) NOT NULL,
	ADDRESS_ID INTEGER NOT NULL,
	EMPLOYEE_TYPE VARCHAR(30) NOT NULL,
	RESTAURANT_ID VARCHAR(20),
	PRIMARY KEY (EMPLOYEE_ID)
);

CREATE TABLE RESTAURANT (
    RESTAURANT_ID VARCHAR(20) NOT NULL,
    LOCATION_ID BIGINT NOT NULL,
    PRIMARY KEY (RESTAURANT_ID)
);

CREATE TABLE LOCATION (
    LOCATION_ID BIGINT NOT NULL,
    LOCATIONTYPE_ID CHAR(1) NOT NULL,
    ADDRESS_ID INT NOT NULL,
    PRIMARY KEY (LOCATION_ID)
);

CREATE TABLE LOCATIONTYPE (
    LOCATIONTYPE_ID CHAR(1) NOT NULL,
	LOCATIONTYPE_DESCRIPTION VARCHAR(40) NOT NULL,
    PRIMARY KEY(LOCATIONTYPE_ID)
);

CREATE TABLE PHONES (
    LOCATION_ID BIGINT NOT NULL,
    NUMSEQ SMALLINT NOT NULL,
	PHONE_NUMBER VARCHAR(20) NOT NULL,
    PHONE_TYPE VARCHAR(20) NOT NULL,
    PRIMARY KEY (LOCATION_ID, NUMSEQ)
);

CREATE TABLE ADDRESS (
   ADDRESS_ID INTEGER NOT NULL,
   ADDRESS_TYPE_ID CHAR(1) NOT NULL,
   ADDRESS_NAME VARCHAR(40) NOT NULL,
   ADDRESS_NUMBER SMALLINT,
   ZIPCODE INTEGER NOT NULL,
   COUNTRY VARCHAR(20) NOT NULL,
   PRIMARY KEY (ADDRESS_ID)      
);

CREATE TABLE ADDRESS_TYPE (
   ADDRESS_TYPE_ID CHAR(1) NOT NULL,
   ADDRESS_TYPE_DESCRIPTION VARCHAR(40),
   PRIMARY KEY (ADDRESS_TYPE_ID) 
);

CREATE TABLE ZIPCODE (
   ZIPCODE INTEGER NOT NULL,
   CITY VARCHAR(20) NOT NULL,
   STATE VARCHAR(20) NOT NULL,
   DISTRICT VARCHAR(20) NOT NULL,
   COUNTRY VARCHAR(20) NOT NULL,
   PRIMARY KEY (ZIPCODE , COUNTRY)      
);

CREATE TABLE ORDERDETAIL (
	TICKET_ID BIGINT NOT NULL,
	NUMSEQ SMALLINT NOT NULL,
    QUANTITY SMALLINT NOT NULL,
    PRICE DECIMAL(5,2) NOT NULL,
    MENU_ITEM_ID INT NOT NULL,
    PRIMARY KEY (TICKET_ID, NUMSEQ)
);

CREATE TABLE MENUITEM (
	MENU_ITEM_ID INT NOT NULL,
    ITEM_NAME VARCHAR(50) NOT NULL,
    PRICE DECIMAL(5,2) NOT NULL,
    CATEGORY VARCHAR(30) NOT NULL,
    PRIMARY KEY (MENU_ITEM_ID)
);

CREATE TABLE INGREDIENTS (
	MENU_ITEM_ID INT NOT NULL,
	NUMSEQ SMALLINT NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    QUANTITY SMALLINT NOT NULL,
    CATEGORY_ID BIGINT NOT NULL,
    PRIMARY KEY (MENU_ITEM_ID, NUMSEQ));
    
    CREATE TABLE CATEGORY (
	CATEGORY_ID BIGINT NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    CLASS_ID BIGINT NOT NULL,
    PRIMARY KEY (CATEGORY_ID));
    
	CREATE TABLE CLASS (
	CLASS_ID BIGINT NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    FAMILY_ID BIGINT NOT NULL,
    PRIMARY KEY (CLASS_ID));
    
	CREATE TABLE FAMILY (
	FAMILY_ID BIGINT NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    SEGMENT_ID BIGINT NOT NULL,
    PRIMARY KEY (FAMILY_ID));
    
    CREATE TABLE SEGMENT (
	SEGMENT_ID BIGINT NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    PRIMARY KEY (SEGMENT_ID));

CREATE TABLE PAYMENT (
    PAYMENT_ID BIGINT NOT NULL,
	CURRENCY_ID CHAR(3) NOT NULL,
    EXPECTED_AMOUNT DECIMAL(5,2) NOT NULL,
    APPROVING_AMOUNT DECIMAL(5,2) NOT NULL,
    APPROVED_AMOUNT DECIMAL(5,2) NOT NULL,
    TIME_CREATED TIMESTAMP NOT NULL,
    PRIMARY KEY (PAYMENT_ID)
);

CREATE TABLE CURRENCY (
   CURRENCY_ID CHAR(3) NOT NULL,
   CURRENCY_CODE SMALLINT NOT NULL,
   CURRENCY_DESCRIPTION VARCHAR(40) NOT NULL,
   PRIMARY KEY (CURRENCY_ID)
);

CREATE TABLE PAYMENTCARD (
    PAYMENT_ID BIGINT NOT NULL,
    PAYMENT_TYPE_ID CHAR(2) NOT NULL,
    CARD_NUMBER VARCHAR(20) NOT NULL,
    BANK_NAME VARCHAR(20) NOT NULL,
    EXPIRATION_DATE DATE NOT NULL,
    ENTRY_METHOD CHAR(1) NOT NULL,
    PRIMARY KEY (PAYMENT_ID)
);

CREATE TABLE PAYMENTTYPE (
    PAYMENT_TYPE_ID CHAR(2) NOT NULL,
    PAYMENT_DESCRIPTION VARCHAR(40) NOT NULL,
    PRIMARY KEY (PAYMENT_TYPE_ID)
);

CREATE TABLE ENTRYMETHOD (
    ENTRY_METHOD CHAR(1) NOT NULL,
    ENTRY_METHOD_DESCRIPTION VARCHAR(40) NOT NULL,
    PRIMARY KEY (ENTRY_METHOD)
);

------------------------------------------------------------------

ALTER TABLE TICKET
	ADD FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID),
	ADD FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID),
	ADD FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
	ADD FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(CURRENCY_ID),
	ADD FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT(RESTAURANT_ID),
	ADD FOREIGN KEY (ORDER_TYPE_ID) REFERENCES ORDERTYPE(ORDER_TYPE_ID);

ALTER TABLE CUSTOMER
	ADD FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID);

ALTER TABLE CUSTOMERCOUPON
	ADD FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
	ADD FOREIGN KEY (COUPON_ID) REFERENCES COUPON(COUPON_ID);
    
ALTER TABLE EMPLOYEE
	ADD FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT(RESTAURANT_ID),
    ADD FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID);
    
ALTER TABLE RESTAURANT 
   ADD FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID);

ALTER TABLE LOCATION 
   ADD FOREIGN KEY (LOCATIONTYPE_ID) REFERENCES LOCATIONTYPE(LOCATIONTYPE_ID),
   ADD FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID);

ALTER TABLE ADDRESS 
   ADD FOREIGN KEY (ADDRESS_TYPE_ID) REFERENCES ADDRESS_TYPE(ADDRESS_TYPE_ID),
   ADD FOREIGN KEY (ZIPCODE,COUNTRY) REFERENCES ZIPCODE(ZIPCODE,COUNTRY);

ALTER TABLE PHONES
	ADD FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID);

ALTER TABLE ORDERDETAIL
	ADD FOREIGN KEY (MENU_ITEM_ID) REFERENCES MENUITEM (MENU_ITEM_ID),
	ADD FOREIGN KEY (TICKET_ID) REFERENCES TICKET(TICKET_ID);
    
ALTER TABLE INGREDIENTS
	ADD FOREIGN KEY (MENU_ITEM_ID) REFERENCES MENUITEM (MENU_ITEM_ID),
	ADD FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID);
    
ALTER TABLE CATEGORY
	ADD FOREIGN KEY (CLASS_ID) REFERENCES CLASS (CLASS_ID);
    
ALTER TABLE CLASS
	ADD FOREIGN KEY (FAMILY_ID) REFERENCES FAMILY (FAMILY_ID);
    
ALTER TABLE FAMILY
	ADD FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT (SEGMENT_ID);

ALTER TABLE PAYMENT
	ADD FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(CURRENCY_ID);

ALTER TABLE PAYMENTCARD
	ADD FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID),
	ADD FOREIGN KEY (PAYMENT_TYPE_ID) REFERENCES PAYMENTTYPE(PAYMENT_TYPE_ID),
	ADD FOREIGN KEY (ENTRY_METHOD) REFERENCES ENTRYMETHOD(ENTRY_METHOD);

